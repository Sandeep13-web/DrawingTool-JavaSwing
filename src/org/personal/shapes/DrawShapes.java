package org.personal.shapes;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class DrawShapes extends javax.swing.JFrame implements MouseListener{
    int x,y;
    int points[] = new int[4];

    public DrawShapes() {
        initComponents();
        this.addMouseListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        SHAPES = new javax.swing.JComboBox<>();
        CLEAR = new javax.swing.JButton();
        COLOR = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Drawing Tool");
        setBackground(new java.awt.Color(255, 51, 51));
        setMinimumSize(new java.awt.Dimension(600, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SHAPES.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Line", "Square", "Circle", "Triangle" }));
        SHAPES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SHAPESActionPerformed(evt);
            }
        });
        getContentPane().add(SHAPES, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 110, -1));

        CLEAR.setBackground(new java.awt.Color(153, 153, 153));
        CLEAR.setText("Clear");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });
        getContentPane().add(CLEAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, -1, -1));

        COLOR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black (Default)", "Red", "Yellow", "Green" }));
        getContentPane().add(COLOR, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Drawing Space"));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 670, 540));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Color:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Shape:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
            SHAPES.setSelectedIndex(0); 
            COLOR.setSelectedIndex(0);
            repaint();
    }//GEN-LAST:event_CLEARActionPerformed

    private void SHAPESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SHAPESActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SHAPESActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrawShapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrawShapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrawShapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrawShapes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DrawShapes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLEAR;
    private javax.swing.JComboBox<String> COLOR;
    private javax.swing.JComboBox<String> SHAPES;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
    }

    @Override
    public void mousePressed(MouseEvent e) {
        if (SHAPES.getSelectedItem().toString().equals("Line")){
            points[0] = e.getX();
            points[1] = e.getY();
        }
        repaint();
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        if (SHAPES.getSelectedItem().toString().equals("Line")){
            points[2] = e.getX();
            points[3] = e.getY();
            repaint();
        }
        if (SHAPES.getSelectedItem().toString().equals("Square")){
            x = e.getX();
            y = e.getY();
            repaint();
        }
        if (SHAPES.getSelectedItem().toString().equals("Circle")){
            x = e.getX();
            y = e.getY();
            repaint();
        }
        if (SHAPES.getSelectedItem().toString().equals("Triangle")){
            x = e.getX();
            y = e.getY();
            repaint();
        }
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
    }
    
    @Override
    public void paint (Graphics g){
        super.paint(g);
        
        if (COLOR.getSelectedItem().toString().equals("Black (Default)")){
            g.setColor(Color.black);
        }
        else if (COLOR.getSelectedItem().toString().equals("Red")){
            g.setColor(Color.red);
        }
        else if (COLOR.getSelectedItem().toString().equals("Green")){
            g.setColor(Color.green);
        }
        else if (COLOR.getSelectedItem().toString().equals("Yellow")){
            g.setColor(Color.yellow);
        }
        //****************************************************
        
        if (SHAPES.getSelectedItem().toString().equals("Line")){
            g.drawLine(points[0], points[1], points[2], points[3]);
        }
        
        else if (SHAPES.getSelectedItem().toString().equals("Square")){
            g.fillRect(x, y, 80, 80);
        }
        
        else if (SHAPES.getSelectedItem().toString().equals("Circle")){
            g.fillOval(x, y, 80, 80);
        }
        
        else if (SHAPES.getSelectedItem().toString().equals("Triangle")){
            
            int t[]={300,270,330};
            int r[]={250,300,300};
            
            g.fillPolygon(t, r, 3);
        }
    }
    
    
}
